3.1) Пример 1: 
	DeviceInfo - DeviceDTO
	// класс, который собирает данные из разных таблиц в базе данных, нужен для отправки клиенту.
     Пример 2: 
	Audited - AuditedEntity
	// суперкласс для классов, являющихся абстракциями таблиц в бд (содержит идентификационные данные).
     Пример 3: 
	TenantInfo - TenantDTO 
	// то же, что и в случае с DeviceInfo - собирательный класс, только для данных администратора.
     Пример 4: 
	DataValidator - Validator
	// класс, проверяющий корректность данных, перед тем как они попадут в бд.
     Пример 5:
	AlarmData - Alarm 
	// собственно, авария и данные о ней.
	
3.2) Пример 1:
	uuid - deviceUuid 
	id - collisionUuid
	// изначально в проекте было принято называть объекты класса UUID используя схему: 
	// "тип, к которому идентификатор отсится" + Uuid,
	// однако, в следствие вполне объяснимых причин(лень или невнимательность) местами от 
	// этой схемы немного отошли, собственно, где удалось найти - исправил.
     Пример 2: 
     	projectRep - projectRepository
	// в проекте определена схема названия класса-репозитория как "имя класса" + repository.
     Пример 3: 
     	deviceProtocol - device
	// объект класса device.
     Пример 4:
     	deviceManager - deviceController
	// классы-контроллеры в Spring принято называть с постфиксом Controller.
     Пример 5:
     	blobData - blob
	// объект класса Blob в JavaScript.
     Пример 6: 
     	form - formData
	// объект класса FormData в JavaScript.
     Пример 7: 
	mapper - modelMapper 
	//объект класса ModelMapper в Java.
